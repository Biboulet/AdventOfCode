use aoc_runner_derive::aoc;
use aoc_runner_derive::aoc_generator;
use itertools::Itertools;

#[aoc(dayx, part1)]
fn solve_part1() -> usize{

}

#[aoc(dayx, part2)]
fn solve_part2() -> usize{
    
}


// #[aoc_generator(dayx)]

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_parsing() {
        assert_eq!(parse_grab("3 blue, 4 red"), (4, 0, 3));

        assert_eq!(
            parse_line("Game 1: 3 blue, 4 red; 1 red, 2 green, 6 blue; 2 green"),
            Game {
                id: 1,
                r: 4,
                g: 2,
                b: 6
            }
        );
    }

    #[test]
    fn test_possible() {
        assert!(is_game_possible(
            &Game {
                id: 9,
                r: 5,
                g: 4,
                b: 6
            },
            12,
            13,
            14
        ))
    }

    #[test]
    fn test_part_one() {
        let result = part_one(&advent_of_code::template::read_file("examples", DAY));
        assert_eq!(result, Some(8));
    }
}
