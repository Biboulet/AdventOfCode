import os
import utils
import re

scans = utils.read_file(os.getcwd() + "\\input.txt")

Values = {}


def ReCompute_Values(_values):
    for key, val in _values.items():
        if type(val) == int:
            continue

        if all([_key in _values.keys() for _key in val[:2]]) and all([type(_values[sub]) == int for sub in val[:2]]):
            if key == "root":
                if _values[val[0]] == _values[val[1]]:
                    print(
                        "\n\n\n\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\nSTOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000P\n\n\n")
                    return

            if val[2] == "+":
                _values[key] = _values[val[0]] + _values[val[1]]
            elif val[2] == "-":
                _values[key] = _values[val[0]] - _values[val[1]]
            elif val[2] == "*":
                _values[key] = _values[val[0]] * _values[val[1]]
            else:
                _values[key] = _values[val[0]] // _values[val[1]]

            ReCompute_Values(_values)
            return


def solve(scans):
    for line in scans:
        args = line.split(": ")

        if args[0] == "humn":
            continue

        if args[1].isdigit():
            Values[args[0]] = int(args[1])
        else:
            first_num = args[1][:4]
            second_num = args[1][7:]
            operator = args[1][5]
            Values[args[0]] = [first_num, second_num, operator]
        ReCompute_Values(Values)

    print("done_parsing")
    for x in range(10**3 * 3558714869, 10**14):
        print(x)
        local_values = Values.copy()
        local_values["humn"] = x
        ReCompute_Values(local_values)


if __name__ == "__main__":
    solve(scans)
